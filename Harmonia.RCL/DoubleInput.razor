<SubmitForm OnSubmitted=@(async _ => await OnSubmitted.InvokeAsync(Value))>
  <input type="number" style="width: 70px" id=@_id min="@Min" max="@Max" step=@Step value=@Value @onchange=onChanged />
  <label for=@_id class="form-label">@SuffixText</label>
</SubmitForm>

@code {

  string _id = Guid.NewGuid().ToString();

  [Parameter]
  public double Value { get; set; }

  [Parameter]
  public double Min { get; set; }

  [Parameter]
  public double Max { get; set; }

  [Parameter]
  public double Step { get; set; } = 0.1;

  [Parameter]
  public string SuffixText { get; set; } = "";

  [Parameter]
  public EventCallback<double> OnChanged { get; set; }

  [Parameter]
  public EventCallback<double> OnSubmitted { get; set; }

  async Task onChanged(ChangeEventArgs e)
  {
    if (double.TryParse(e.Value.ToString(), out var val))
    {
      Value = val;
      await OnChanged.InvokeAsync(Value);
    }
  }

}